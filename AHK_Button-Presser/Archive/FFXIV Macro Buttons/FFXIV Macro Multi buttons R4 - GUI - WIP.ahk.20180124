; FFXIV Macro 2 Buttons
;
; Modified from original made in 20150318
; 20161031 - Added Pause script and cleaned up
; 20161101 - Throws an error if input is left blank.
; 20161110 - Added check after all parameters are entered to start input over
; 20161112 - Re-wrote program to used fucntion and added crafting food usage
; 20161122 - changed output style from Send/SendRaw to PostMessage
; 20161127 - added key functions to make it easier to follow
;
; Simple script to press buttons in anything
; The amount of time to pause (in milliseconds) between 0 and 2147483647 (24 days), which can be an expression.
; 1 sec = 1000, 1 min = 60000, 1 hour = 3600000, (33s * 100) = 3300000
;

IfNotExist, Image.jpg
	FileInstall, images/CraftingLog.jpg, CraftingLog


global PauseStatus = 0
global Macro1 = 0
global Macro1key = 0
global Macro1Sleep = 0
global Macro2 = 0
global Macro2key = 0
global Macro2Sleep = 0
global Macro3 = 0
global Macro3key = 0
global Macro3Sleep = 0
global ItemsNum = 0
global ItemsLeft = 0
global Fooding = 0
global Foodingkey = 0
global FoodLoop = 0
global FoodTime = 0
global UsingFood = 0
global CraftTime = 0
global TotalTime = 0
global NumOfFoodUses = 0
global TotalTimeCalc = 0
global FoodLoopCalc = 0
global NumOfFoodUsesCalc = 0
global Collectable = 0
global FoodSub = 0
global temp = 0
global tempkey = 0
global FoodCheck = 0
global MacroCount = 0
global pid1 = 0

WinGet, id, list, ahk_class FFXIVGAME
Loop, %id%
{
   this_id := id%A_Index%
   WinGet, this_pid, PID, ahk_id %this_id%
   pid%A_Index% := this_pid
}


;MsgBox, %this_pid%

;MsgBox,0,Intro, This simply presses buttons for you`, make sure you have the needed mats!`nYou can press Alt + Q to quit or the Pause/Break key to pause the program at any time.`n-Ava,5
;MsgBox,0,Preparation, Please be on the crafting menu with the item you want to craft selected and the materials for it as well.`nPress Ctrl+H for help on how to use and setup this program,5


;Gui, Main:Default
;Gui -MaximizeBox
Gui, Add, Picture, x0 y0 w450 h300, CraftingLog
Gui, Add, Text, y+10, Number of Macro Buttons.
Gui, Add, Radio, Checked vMacroCount, 1
Gui, Add, Radio, xp+32, 2
Gui, Add, Radio, xp+32, 3
Gui, Add, Tab3, x0, Macro 1||Macro 2|Macro 3
Gui, Add, Text, cGreen, First Macro Button.
;Gui, Add, DropDownList, vMacro1, 1|2|3|4|5|6|7|8|9|0|-|=
Gui, Add, Radio, vMacro1, 1
Gui, Add, Radio, xp+32, 2
Gui, Add, Radio, xp+32, 3
Gui, Add, Radio, xp+32, 4
Gui, Add, Radio, xp+32, 5
Gui, Add, Radio, xp+32, 6
Gui, Add, Radio, xp+32, 7
Gui, Add, Radio, xp+32, 8
Gui, Add, Radio, xp+32, 9
Gui, Add, Radio, xp+32, 0
Gui, Add, Radio, xp+38, -
Gui, Add, Radio, xp+28, =
Gui, Add, Text, cGreen yp+18 xp-354, First Macro wait time (in seconds):
Gui, Add, Edit, Number R1 vMacro1Sleep
GuiControl, MoveDraw, vMacro1Sleep, x10 y20 w200 h100
Gui, Tab
Gui, Tab, 2
Gui, Add, Text, cPurple, Second Macro Button.
;Gui, Add, DropDownList, vMacro2, 1|2|3|4|5|6|7|8|9|0|-|=
Gui, Add, Radio, vMacro2, 1
Gui, Add, Radio, xp+32, 2
Gui, Add, Radio, xp+32, 3
Gui, Add, Radio, xp+32, 4
Gui, Add, Radio, xp+32, 5
Gui, Add, Radio, xp+32, 6
Gui, Add, Radio, xp+32, 7
Gui, Add, Radio, xp+32, 8
Gui, Add, Radio, xp+32, 9
Gui, Add, Radio, xp+32, 0
Gui, Add, Radio, xp+38, -
Gui, Add, Radio, xp+28, =
Gui, Add, Text, cPurple yp+18 xp-354, Second Macro wait time (in seconds):
Gui, Add, Edit, Number R1 vMacro2Sleep
Gui, Tab
Gui, Tab, 3
Gui, Add, Text, cBlue, Third Macro Button.
Gui, Add, Radio, vMacro3, 1
Gui, Add, Radio, xp+32, 2
Gui, Add, Radio, xp+32, 3
Gui, Add, Radio, xp+32, 4
Gui, Add, Radio, xp+32, 5
Gui, Add, Radio, xp+32, 6
Gui, Add, Radio, xp+32, 7
Gui, Add, Radio, xp+32, 8
Gui, Add, Radio, xp+32, 9
Gui, Add, Radio, xp+32, 0
Gui, Add, Radio, xp+38, -
Gui, Add, Radio, xp+28, =
Gui, Add, Text, cBlue yp+18 xp-354, Second Macro wait time (in seconds):
Gui, Add, Edit, Number R1 vMacro3Sleep
Gui, Tab
Gui, Add, Text, x0, Number of crafts:
Gui, Add, Edit, Number R1 vItemsNum
Gui, Add, Text, x0, Does this craft require Food?
Gui, Add, Checkbox, gFoodCheck
;GuiControl, Hide, vFooding
;Gui, Add, Tab2, ,Test1|Test2|Test3
;Gui, Tab, 2
;Gui, Add, DropDownList, vFooding, 1|2|3|4|5|6|7|8|9|0|-|=
Gui, Add, Tab3, Hidden vFoodTab, Food
Gui, Add, Text, , Button pressed to use food:
Gui, Add, Radio, Group vFooding, 1
Gui, Add, Radio, xp+32, 2
Gui, Add, Radio, xp+32, 3
Gui, Add, Radio, xp+32, 4
Gui, Add, Radio, xp+32, 5
Gui, Add, Radio, xp+32, 6
Gui, Add, Radio, xp+32, 7
Gui, Add, Radio, xp+32, 8
Gui, Add, Radio, xp+32, 9
Gui, Add, Radio, xp+32, 0
Gui, Add, Radio, xp+38, -
Gui, Add, Radio, xp+28, =
Gui, Add, Text, yp+18 xp-354, Food time in minutes:
Gui, Add, Edit, yp+18 Number r1 vFoodTime
Gui, Tab 
GuiControl, Hide, Food
Gui, Add, Button, x0 Default, &Run
Gui, Add, Button, xp+50, &Help
Gui, Add, Button, gAva xp+250, &Ava's Macros
Gui, Show
return


GuiClose:
ExitApp




;-------------SubRoutines-------------
ButtonRun:
{
	Gui, Submit
	MsgBox, MacroCount = %MacroCount%
	MsgBox,4,Parameters, Your selections:`n`nFirst macro Button = %Macro1% `nMacro one wait time = %Macro1Sleep%`n`nSecond Macro Button = %Macro2%`nMacro two wait time = %Macro2Sleep%`n`nThird macro Button = %Macro3% `nMacro three wait time = %Macro3Sleep%`n`nNumber of items to craft = %ItemsNum%`n`nNumber of Crafts per Food Cycle = %FoodLoop%`nTotal time to complete the craft = %TotalTime% minutes `n`n Is this correct?,

	if (MacroCount = 1 && !Macro1Sleep)
	{
		MsgBox, Your wait time for Macro 1 is invalid or 0.
		Gui, Show
		return
	}
	if (MacroCount = 2 && (!Macro1Sleep || !Macro2Sleep))
	{
		if (!Macro1Sleep)
		{
			MsgBox, Your wait time for Macro 1 is invalid or 0.
		}
		if (!Macro2Sleep)
		{
			MsgBox, Your wait time for Macro 2 is invalid or 0.
		}
		Gui, Show
		return
	}
	if (MacroCount = 3 && (!Macro1Sleep || !Macro2Sleep || !Macro3Sleep))
	{
		if (!Macro1Sleep)
		{ 
			MsgBox, Your wait time for Macro 1 is invalid or 0.
		}
		if (!Macro2Sleep)
		{
			MsgBox, Your wait time for Macro 2 is invalid or 0.
		}
		if (!Macro3Sleep)
		{
			MsgBox, Your wait time for Macro 3 is invalid or 0.
		}
		Gui, Show
		return
	}
	if (!ItemsNum)
	{
		MsgBox, You are trying to craft 0 items
		Gui, Show
		return
	}

	ChtoHex(Macro1)
	Macro1key := tempkey
	if Macro1 = 11
		Macro1key := 0xBD
	if Macro1 = 12
		Macro1key := 0xBB

	ChtoHex(Macro2)
	Macro2key := tempkey
	if Macro2 = 11
		Macro2key := 0xBD
	if Macro2 = 12
		Macro2key := 0xBB

	ChtoHex(Macro3)
	Macro3key := tempkey
	if Macro3 = 11
		Macr3key := 0xBD
	if Macro3 = 12
		Macro3key := 0xBB

	ChtoHex(Fooding)
	Foodingkey := tempkey
	if Fooding = 11
		Foodingkey := 0xBD
	if Fooding = 12
		Foodingkey := 0xBB

	;MsgBox, UsingFood = %UsingFood% `nMacro 1 Button = %Macro1key% `nMacro 2 Button = %Macro2key% `nFood Button = %Foodingkey%
	CraftTime := Macro1Sleep + Macro2Sleep + 8
	TotalTimeCalc := ((CraftTime * ItemsNum) / 60 )
	TotalTime := Round(TotalTimeCalc,2)
	FoodLoopCalc := (FoodTime * 60) / CraftTime
	FoodLoop := Floor(FoodLoopCalc)
	NumOfFoodUsesCalc := ItemsNum / FoodLoop
	NumOfFoodUses := Ceil(NumOfFoodUsesCalc)
	ItemsLeft := ItemsNum
	;MsgBox, %UsingFood%
		;	IfMsgBox No
	;{	
		;MsgBox, Bye then!
		;ExitApp
	;}
	SplashTextOn, 180,60, Start, The crafting Macro is starting`nPlease be on the window as shown earlier!!
	sleep 3000
	SplashTextOff
	sleep 5000
	{
		CraftStart()
	}
	ExitApp
}


FoodCheck:
{
	if FoodCheck = 1
	{
		GuiControl, Hide, FoodTab
		UsingFood = 0
		FoodCheck = 0	
	}
	else if FoodCheck = 0
	{
		GuiControl, Show, FoodTab
		UsingFood = 1
		FoodCheck = 1
	}
	return
}


ButtonHelp:
{
	Gui, Help:New, ,Help Screen
	Gui, Add, Picture, x0 y0 w800 h800, TestImg
	Gui, Help:Show
	return
}

Ava:
{
	Gui, Ava:New, ,Ava's Macros
	Gui, Add, Button, gDiff40, 40 Easy
	Gui, Ava:Show
	return
}

Diff40:
{
	GuiControl, ,Macro1, 4
	GuiControl, ,Macro1Sleep, 24
	GuiControl, ,Macro2, 5
	GuiControl, ,Macro2Sleep, 19
	GuiControl, ,UsingFood, 1
	GuiControl, ,Fooding, =
	GuiControl, ,Macro1, 4
	GuiControl, ,Macro1, 4
}

;----------------SubRoutineEND-------------


;----------------HotKeys----------------
!q::ExitApp

AppsKey::
{
	WinMinimize, FINAL FANTASY XIV
	return
}

^!m::
{
	SplashTextOn, 180,60, Start, The crafting Macro is starting!!
	sleep 2000
	SplashTextOff
	sleep 1000
	{
		CraftStart()
	}
	ExitApp
}

Pause::
{
	if (PauseStatus = 0)
	{
		Pause,toggle,1
		MsgBox,0,Pasuing,Pausing script.,1
		PauseStatus = 1
	}
	else
	{
		Pause,toggle,1
		MsgBox,0,Unpasuing,Unpausing script.,1
		PauseStatus = 0
	}
	return
}
;----------------HotKeysEND-------------



;----------------Functions Blocks----------------

CraftStart()
{
	if UsingFood = 1
	{	
		Loop, %NumOfFoodUses%
		{
			UseFood()
			Loop, %FoodLoop%
			{
				if ItemsLeft = 0
				{
					ExitApp
				}
				else
				{
					Craft()
				}
			}
		}
	}
	else
	{
		Loop, %ItemsNum%
		{
			Craft()
		}
	}
}

Craft()
{
	SplashTextOn, 180,60, Items To Craft, There are %ItemsLeft% left to make.
	;WinActivate,  ahk_class FFXIVGAME,,,
	Sleep 800
	SplashTextOff
	Sleep 300
	Numpad0Key()
	Sleep 600
	Numpad0Key()
	Sleep 1000
	Numpad0Key() 
	Sleep 1750
	if (MacroCount = 1)
	{
		PostMessage, 0x100, Macro1key,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, Macro1key,,, ahk_pid %pid1% 
		Macro1Sleeping := Macro1Sleep * 1000
		Sleep %Macro1Sleeping%
		ItemsLeft-=1
		Sleep 4000
		return	
	}
	if (MacroCount = 2)
	{
		PostMessage, 0x100, Macro1key,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, Macro1key,,, ahk_pid %pid1% 
		Macro1Sleeping := Macro1Sleep * 1000
		Sleep %Macro1Sleeping%
		PostMessage, 0x100, Macro2key,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, Macro2key,,, ahk_pid %pid1% 
		Macro2Sleeping := Macro2Sleep * 1000
		Sleep %Macro2Sleeping%
		ItemsLeft-=1
		Sleep 4000
	return
	}
	if (MacroCount = 3)
	{
		PostMessage, 0x100, Macro1key,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, Macro1key,,, ahk_pid %pid1% 
		Macro1Sleeping := Macro1Sleep * 1000
		Sleep %Macro1Sleeping%
		PostMessage, 0x100, Macro2key,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, Macro2key,,, ahk_pid %pid1% 
		Macro2Sleeping := Macro2Sleep * 1000
		Sleep %Macro2Sleeping%
		PostMessage, 0x100, Macro3key,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, Macro3key,,, ahk_pid %pid1% 
		Macro3Sleeping := Macro3Sleep * 1000
		Sleep %Macro3Sleeping%
		ItemsLeft-=1
		Sleep 4000
	return
	}
}


UseFood()
{
	Sleep 2000
	EscKey()
	Sleep 3000
	PostMessage, 0x100, Foodingkey,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, Foodingkey,,, ahk_pid %pid1% 
	Sleep 4000
	NKey()
	Sleep 500
	Numpad0Key()
	Sleep 1000
}


ChtoHex(text)
{
    Loop, Parse, text
    {
      char:= A_LoopField
       char_number := asc(char)
      char_hex := char_number      
            
      ; Convert a decimal integer to hexadecimal:
      SetFormat, IntegerFast, hex
      char_hex += 0  ; Sets char_number to its hex value.
      char_hex .= ""  ; Necessary due to the "fast" mode.
      SetFormat, IntegerFast, d

      tempkey := char_hex
	} 
return
}

Numpad0Key()
{
	PostMessage, 0x100, 0x60,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x60,,, ahk_pid %pid1%
}

Numpad8Key()
{
	PostMessage, 0x100, 0x68,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x68,,, ahk_pid %pid1%
}

Numpad2Key()
{
	PostMessage, 0x100, 0x62,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x62,,, ahk_pid %pid1%
}

Numpad6Key()
{
	PostMessage, 0x100, 0x66,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x66,,, ahk_pid %pid1%
}

Numpad4Key()
{
	PostMessage, 0x100, 0x64,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x64,,, ahk_pid %pid1%
}

EscKey()
{
	PostMessage, 0x100, 0x1B,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x1B,,, ahk_pid %pid1%
}

NKey()
{
	PostMessage, 0x100, 0x4E ,,, ahk_pid %pid1% 
		Sleep 75
	PostMessage, 0x101, 0x4E ,,, ahk_pid %pid1% 
}



/* DEBUG STUFF
//Used to figure out what keys are being pressed in game with their hex value
AppsKey::
{

Loop, 1
	{
		temp := temp + 1
		SetFormat, IntegerFast, hex	
		temp += 0  ; Sets Var (which previously contained 11) to be 0xb.
		temp .= ""  ; Necessary due to the "fast" mode.
		SetFormat, IntegerFast, d
		PostMessage, 0x100, temp,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, temp,,, ahk_pid %pid1%
		Sleep 100
		MsgBox,0,HexUp,%temp%,0.4
	}
	return
}

^AppsKey::
{

Loop, 1
	{
		temp := temp - 1
		SetFormat, IntegerFast, hex	
		temp += 0  ; Sets Var (which previously contained 11) to be 0xb.
		temp .= ""  ; Necessary due to the "fast" mode.
		SetFormat, IntegerFast, d
		PostMessage, 0x100, temp,,, ahk_pid %pid1% 
			Sleep 75
		PostMessage, 0x101, temp,,, ahk_pid %pid1%
		Sleep 100
		MsgBox,0,HexDn,%temp%,0.4
	}
	return
}
*/
